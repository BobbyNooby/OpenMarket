{
	"name": "my-app",
	"private": true,
	"version": "0.0.1",
	"type": "module",
	"scripts": {
		"dev": "concurrently \"vite dev\" \"go run ./server/main.go\"",
		"build": "vite build",
		"preview": "vite preview",
		"prepare": "svelte-kit sync || echo ''",
		"check": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json",
		"check:watch": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch",
		"format": "prettier --write .",
		"lint": "prettier --check . && eslint .",
		"db:up": "docker compose -f ./postgres/docker-compose.yml up -d db",
		"db:down": "docker compose -f ./postgres/docker-compose.yml down",
		"db:logs": "docker compose -f ./postgres/docker-compose.yml logs -f db",
		"db:nuke": "docker compose -f ./postgres/docker-compose.yml down -v",
		"db:shell": "docker compose -f ./postgres/docker-compose.yml exec db psql -U dev -d openmarket",
		"db:wait": "node -e \"(async()=>{const {Client}=require('pg');const url=process.env.DATABASE_URL;for(;;){try{const c=new Client({connectionString:url});await c.connect();await c.end();break;}catch(e){await new Promise(r=>setTimeout(r,500));}}})()\"",
		"db:reset": "npm run db:down && npm run db:up && npm run db:wait && npm run db:migrate"
	},
	"devDependencies": {
		"@eslint/compat": "^1.2.5",
		"@eslint/js": "^9.18.0",
		"@sveltejs/adapter-auto": "^6.0.0",
		"@sveltejs/kit": "^2.22.0",
		"@sveltejs/vite-plugin-svelte": "^6.0.0",
		"@tailwindcss/vite": "^4.0.0",
		"eslint": "^9.18.0",
		"eslint-config-prettier": "^10.0.1",
		"eslint-plugin-svelte": "^3.0.0",
		"globals": "^16.0.0",
		"prettier": "^3.4.2",
		"prettier-plugin-svelte": "^3.3.3",
		"prettier-plugin-tailwindcss": "^0.6.11",
		"svelte": "^5.0.0",
		"svelte-check": "^4.0.0",
		"tailwindcss": "^4.0.0",
		"typescript": "^5.0.0",
		"typescript-eslint": "^8.20.0",
		"vite": "^7.0.4"
	},
	"dependencies": {
		"better-auth": "^1.3.6",
		"concurrently": "^9.2.0",
		"pg": "^8.16.3",
		"postgres": "^3.4.7"
	}
}
